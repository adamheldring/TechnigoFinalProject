{"version":3,"sources":["components/header/header.js","components/constants.js","components/amodules/sequenser/synthKey.js","components/amodules/sequenser/synthModule.js","components/amodules/sequenser/seqDrum.js","components/amodules/sequenser/drumsModule.js","components/amodules/settings/settings.js","components/amodules/sequenser/sequenser.js","components/amodules/saveLoad/saveLoad.js","components/pages/composerPage/composerPage.js","components/pages/404/404.js","components/app.js","index.js"],"names":["Header","react_default","a","createElement","className","React","Component","WYT_SERVER_URL","EMPTY_SYNTH_MATRIX","Array","fill","EMPTY_DRUM_MATRIX","SNARE_DRUM_SETTINGS","noise","type","envelope","attack","decay","sustain","release","HIHAT_DRUM_SETTINGS","frequency","harmonicity","modulationIndex","resonance","octaves","SYNTH_NOTES","DEFAULT_BPM","DEFAULT_WAVEFORM","DEFAULT_SONG_TITLE","DEFAULT_COMPOSER","DRUM_ICONS","COLOR_GRADIENT","SynthKey","_this","this","props","synthKeyIndex","slice","bars","map","bar","barIndex","synthKeyMatrix","key","onClick","handleNoteClick","SynthModule","passUpNoteClick","console","log","_this2","_this$props","synth","activeBar","src","alt","index","style","backgroundColor","concat","synthKey","sequenser_synthKey","SeqDrum","drumIndex","drumMatrix","handleDrumClick","DrumsModule","passUpBeatClick","drums","drum","seqDrum","Settings","handleBpmChange","e","changeBpm","target","value","handleWaveChange","changeWaveForm","bpm","synthWaveForm","loadedSongTitle","loadedSongComposer","name","min","max","onChange","toUpperCase","htmlFor","id","checked","Sequenser","state","resetTransport","checkForActiveSession","sessionStorage","getItem","setState","JSON","parse","err","startPlaying","Tone","Transport","start","stopPlaying","stop","rewindPlaying","newDrumMatrix","table","newSynthMatrix","newBpm","rampTo","newWaveForm","clearMatrix","removeItem","soundGenerator","context","latencyHint","freeverb","Freeverb","toMaster","gain","Gain","connect","MembraneSynth","NoiseSynth","MetalSynth","forEach","synths","i","push","Synth","transportIndex","scheduleRepeat","time","step","oscillator","setNewWaveFrom","Promise","resolve","all","then","synthIndex","triggerAttackRelease","cancel","prevProps","prevState","newSongLoaded","resetSongLoader","setItem","stringify","_this$state","synthModule","drumsModule","settings_settings","SaveLoad","songTitle","composer","songList","songToLoad","loadedSong","handleFormChange","Object","defineProperty","clearFields","submitSave","preventDefault","newSong","songId","Date","now","createdDate","waveform","fetch","headers","Content-Type","method","body","data","loadSongList","loadNewSong","catch","error","alert","submitLoad","response","json","loadSongToStorage","_this$state2","onSubmit","placeholder","required","size","sort","b","song","ComposerPage","sequenser_sequenser","saveLoad_saveLoad","NotFound","App","BrowserRouter","header_header","Switch","Route","exact","path","component","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.1a5f3227.chunk.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./header.scss\"\n\nclass Header extends React.Component {\n\n  render() {\n    return (\n      <div className=\"header-container\">\n        <div className=\"header__mainHeading-container\">\n          <h2 className=\"header__mainHeading\">WATCH YOUR TONE</h2>\n          <h2 className=\"header__mainHeading header__mainHeading--shadow\">WATCH YOUR TONE</h2>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Header\n","// WATCH YOUR TONE – CONSTANS\n\n// Detects and swithches server url depending on if live or local environment\nexport const WYT_SERVER_URL = process.env.NODE_ENV === \"production\" ? \"https://watchyourtone.herokuapp.com\" : \"http://localhost:8080\"\n\n// Creates default empty SYNTH MATRIX for sequenser\nexport const EMPTY_SYNTH_MATRIX = () => [\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false)\n]\n\n// Creates default empty DRUM MATRIX for sequenser\nexport const EMPTY_DRUM_MATRIX = () => [\n  new Array(16).fill(false),\n  new Array(16).fill(false),\n  new Array(16).fill(false)\n]\n\n// NOISE SYNTH SETTINGS OBJECT – Adam's snare drum sound\nexport const SNARE_DRUM_SETTINGS = {\n  noise: {\n    type: \"white\"\n  },\n  envelope: {\n    attack: 0.001,\n    decay: 0.15,\n    sustain: 0.05,\n    release: 0.2\n  }\n}\n\n// METAL SYNTH SETTINGS OBJECT – Adam's hi-hat cymbal drum sound\nexport const HIHAT_DRUM_SETTINGS = {\n  frequency: 200,\n  envelope: {\n    attack: 0.001,\n    decay: 0.05,\n    release: 0.05\n  },\n  harmonicity: 5.1,\n  modulationIndex: 32,\n  resonance: 4000,\n  octaves: 1.5\n}\n\n// SYNTH NOTES - C major scale\nexport const SYNTH_NOTES = [\"C5\", \"B4\", \"A4\", \"G4\", \"F4\", \"E4\", \"D4\", \"C4\"]\n\n// DEFAULT SEQUENSER BPM\nexport const DEFAULT_BPM = 140\n\n// DEFAULT SYNTH WAVEFORM\nexport const DEFAULT_WAVEFORM = \"triangle\"\n\nexport const DEFAULT_SONG_TITLE = \"untitled\"\n\nexport const DEFAULT_COMPOSER = \"unknown\"\n\nexport const DRUM_ICONS = [\n  \"./assets/kick-100-inv.png\",\n  \"./assets/snare-100-inv.png\",\n  \"./assets/hihat-100-inv.png\"\n]\n\n// TURQUOISE TO PINK\n// 16 STEP COLOR GRADIENT YELLOW TO ORANGE FOR TRANSPORT BAR\nexport const COLOR_GRADIENT = [\n\"6BFFE9\", \"74F5EA\", \"7DECEB\", \"86E3ED\",\n\"8FDAEE\", \"98D1F0\", \"A1C8F1\", \"AABFF2\",\n\"B3B5F4\", \"BCACF5\", \"C5A3F7\", \"CE9AF8\",\n\"D791F9\", \"E088FB\", \"E97FFC\", \"F276FE\"\n]\n\n// YELLOW TO ORANGE\n// 16 STEP COLOR GRADIENT FOR TRANSPORT BAR\n// export const COLOR_GRADIENT = [\n//   \"FFF96B\", \"FEF264\", \"FDEB5E\", \"FDE468\",\n//   \"FCDD52\", \"FBD64C\", \"FBCF46\", \"FAC840\",\n//   \"F9C139\", \"F9BA33\", \"F8B32D\", \"F7AC27\",\n//   \"F7A521\", \"F69E1B\", \"F59715\", \"F5910F\"\n// ]\n","import React from \"react\"\nimport { SYNTH_NOTES } from \"../../constants\"\n\nclass SynthKey extends React.Component {\n\n\n  render() {\n    return (\n      <tr className=\"synthKey-row\">\n        <td className=\"tableRowExplainer tableRowExplainer--synth\">{SYNTH_NOTES[this.props.synthKeyIndex].slice(0,1)}</td>\n        {this.props.bars.map((bar, barIndex) => {\n          return <td\n            className={this.props.synthKeyMatrix[this.props.synthKeyIndex][barIndex] ?\n              \"noteBox noteBox--active\" : \"noteBox\"\n            }\n            key={barIndex}\n            onClick={() => this.props.handleNoteClick(barIndex)}\n          />\n        })}\n      </tr>\n    )\n  }\n\n}\n\nexport default SynthKey\n","import React from \"react\"\nimport SynthKey from \"./synthKey\"\nimport { COLOR_GRADIENT } from \"../../constants\"\n\nclass SynthModule extends React.Component {\n\n  passUpNoteClick = (synthKeyIndex, barIndex) => {\n    console.log(\"Someone clicked note inside synth\")\n    this.props.handleNoteClick(synthKeyIndex, barIndex)\n  }\n\n  render() {\n    const { synth, activeBar } = this.props\n    return (\n      <div className=\"synth-container\">\n        <table>\n          <thead>\n            <tr>\n              <td className=\"tableRowExplainer tableRowExplainer--bars\">\n                <img src={\"./assets/note-100-inv.png\"} className=\"drumIcon\" alt=\"note\"/>\n              </td>\n              {synth[0].map((bars, index) => {\n                return <th key={index} style={{backgroundColor: (index === activeBar) ? `#${COLOR_GRADIENT[index]}` : 'darkgrey'}} className={(index === activeBar) ?\n                  \"barIndicator barIndicator--active\" :\n                  \"barIndicator\"\n                }>{index + 1}</th>\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {synth.map((synthKey, synthKeyIndex) => {\n              return <SynthKey\n                key={synthKeyIndex}\n                synthKeyIndex={synthKeyIndex}\n                bars={synth[synthKeyIndex]}\n                synthKeyMatrix={synth}\n                handleNoteClick={barIndex => this.passUpNoteClick(synthKeyIndex, barIndex)} />\n            })}\n            </tbody>\n        </table>\n      </div>\n    )\n  }\n\n}\n\nexport default SynthModule\n","import React from \"react\"\nimport { DRUM_ICONS } from \"../../constants\"\n\nclass SeqDrum extends React.Component {\n\n\n  render() {\n    return (\n      <tr className=\"seqInstrument-row\">\n        <td className=\"tableRowExplainer tableRowExplainer--drums\">\n          <img src={DRUM_ICONS[this.props.drumIndex]} className=\"drumIcon\" alt=\"drum\"/>\n        </td>\n        {this.props.bars.map((bar, barIndex) => {\n          return <td\n            className={this.props.drumMatrix[this.props.drumIndex][barIndex] ?\n              \"beatBox beatBox--active\" : \"beatBox\"\n            }\n            key={barIndex}\n            onClick={() => this.props.handleDrumClick(barIndex)}\n          />\n        })}\n      </tr>\n    )\n  }\n\n}\n\nexport default SeqDrum\n","import React from \"react\"\nimport SeqDrum from \"./seqDrum\"\nimport { COLOR_GRADIENT } from \"../../constants\"\n\nclass DrumsModule extends React.Component {\n\n  passUpBeatClick = (drumIndex, barIndex) => {\n    console.log(\"Someone clicked beat inside drums\")\n    this.props.handleDrumClick(drumIndex, barIndex)\n  }\n\n  render() {\n    const { drums, activeBar } = this.props\n    return (\n      <div className=\"drums-container\">\n        <table>\n          <thead>\n            <tr>\n              <td className=\"tableRowExplainer tableRowExplainer--bars\"></td>\n              {drums[0].map((bars, index) => {\n                return <th key={index} style={{backgroundColor: (index === activeBar) ? `#${COLOR_GRADIENT[index]}` : 'darkgrey'}} className={(index === activeBar) ?\n                  \"barIndicator barIndicator--active\" :\n                  \"barIndicator\"\n                }>{index + 1}</th>\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {drums.map((drum, drumIndex) => {\n              return <SeqDrum\n                key={drumIndex}\n                drumIndex={drumIndex}\n                bars={drums[drumIndex]}\n                drumMatrix={drums}\n                handleDrumClick={(barIndex) => this.passUpBeatClick(drumIndex, barIndex)}\n              />\n            })}\n            </tbody>\n        </table>\n      </div>\n    )\n  }\n\n}\n\nexport default DrumsModule\n","import React from \"react\"\nimport \"./settings.scss\"\nimport \"./pressRadioButtons.scss\"\nimport \"./customRangeInput.scss\"\n\nclass Settings extends React.Component {\n\n  handleBpmChange = e => {\n    this.props.changeBpm(e.target.value)\n    console.log(\"SETTINGS PAGE SAYING NEW BPM: \", e.target.value)\n  }\n\n  handleWaveChange = e => {\n    this.props.changeWaveForm(e.target.value)\n    console.log(\"SETTINGS PAGE SAYING NEW WF: \", e.target.value)\n  }\n\n  render() {\n    const { bpm, synthWaveForm, loadedSongTitle, loadedSongComposer } = this.props\n    return (\n      <section className=\"settings-container\">\n        <h2 className=\"composerPage-headline\">SETTINGS</h2>\n        <div className=\"settings-container__bpm\">\n          <h3 className=\"section-heading\">TEMPO: <span className=\"highlighted\">{this.props.bpm}</span> BPM</h3>\n        </div>\n        <div className=\"meters\">\n          <input\n            name=\"bpm\"\n            type=\"range\"\n            min=\"40\"\n            max=\"300\"\n            value={bpm}\n            onChange={this.handleBpmChange} />\n        </div>\n\n        <div className=\"waveFormSetting-container\">\n          <div className=\"settings-container__waveform\">\n            <h3 className=\"section-heading\">WAVEFORM: <span className=\"highlighted\">{this.props.synthWaveForm.toUpperCase()}</span></h3>\n          </div>\n          <label className=\"radio-button-container\" htmlFor=\"triangle\">\n            <img src=\"./assets/wf-triangle-small.png\" className=\"waveform-image\" alt=\"triangle-waveform\" />\n            <input\n              type=\"radio\"\n              id=\"triangle\"\n              name=\"triangle\"\n              value=\"triangle\"\n              onChange={this.handleWaveChange}\n              checked={synthWaveForm === \"triangle\"} />\n            <span className=\"custom-radio-button\" />\n          </label>\n          <br />\n          <label className=\"radio-button-container\" htmlFor=\"square\">\n            <img src=\"./assets/wf-square-small.png\" className=\"waveform-image\" alt=\"square-waveform\" />\n            <input\n              type=\"radio\"\n              id=\"square\"\n              name=\"square\"\n              value=\"square\"\n              onChange={this.handleWaveChange}\n              checked={synthWaveForm === \"square\"} />\n            <span className=\"custom-radio-button\" />\n          </label>\n          <br />\n          <label className=\"radio-button-container\" htmlFor=\"sawtooth\">\n            <img src=\"./assets/wf-sawtooth-small.png\" className=\"waveform-image\" alt=\"sawtooth-waveform\" />\n            <input\n              type=\"radio\"\n              id=\"sawtooth\"\n              name=\"sawtooth\"\n              value=\"sawtooth\"\n              onChange={this.handleWaveChange}\n              checked={synthWaveForm === \"sawtooth\"} />\n            <span className=\"custom-radio-button\" />\n          </label>\n          <br />\n          <label className=\"radio-button-container\" htmlFor=\"sine\">\n            <img src=\"./assets/wf-sine-small.png\" className=\"waveform-image\" alt=\"sine-waveform\" />\n            <input\n              type=\"radio\"\n              id=\"sine\"\n              name=\"sine\"\n              value=\"sine\"\n              onChange={this.handleWaveChange}\n              checked={synthWaveForm === \"sine\"} />\n            <span className=\"custom-radio-button\" />\n          </label>\n          <br />\n        </div>\n      </section>\n    )\n  }\n\n}\n\nexport default Settings\n","import React from \"react\"\nimport Tone from \"tone\"\nimport SynthModule from \"./synthModule\"\nimport DrumsModule from \"./drumsModule\"\nimport Settings from \"../settings/settings\"\nimport { EMPTY_SYNTH_MATRIX, EMPTY_DRUM_MATRIX, SNARE_DRUM_SETTINGS, HIHAT_DRUM_SETTINGS,\n  SYNTH_NOTES, DEFAULT_BPM, DEFAULT_WAVEFORM, DEFAULT_SONG_TITLE, DEFAULT_COMPOSER } from \"../../constants\"\nimport \"./sequenser.scss\"\n\nclass Sequenser extends React.Component {\n\nstate = {\n  synth: EMPTY_SYNTH_MATRIX(),\n  drums: EMPTY_DRUM_MATRIX(),\n  activeBar: 0,\n  resetTransport: false,\n  bpm: 140,\n  synthWaveForm: \"triangle\",\n  loadedSongTitle: DEFAULT_SONG_TITLE,\n  loadedSongComposer: DEFAULT_COMPOSER\n}\n\ncomponentDidMount() {\n  Tone.Transport.cancel()\n  this.soundGenerator()\n  this.checkForActiveSession()\n}\n\ncomponentDidUpdate(prevProps, prevState) {\n  if (this.props.newSongLoaded) {\n    this.checkForActiveSession()\n    this.props.resetSongLoader()\n  }\n  if (this.state !== prevState) {\n    sessionStorage.setItem(\"drums\", JSON.stringify(this.state.drums))\n    sessionStorage.setItem(\"synth\", JSON.stringify(this.state.synth))\n    sessionStorage.setItem(\"bpm\", this.state.bpm)\n    sessionStorage.setItem(\"waveform\", this.state.synthWaveForm)\n    sessionStorage.setItem(\"loadedSongTitle\", this.state.loadedSongTitle)\n    sessionStorage.setItem(\"loadedSongComposer\", this.state.loadedSongComposer)\n  }\n}\n\ncomponentWillUnmount() {\n  Tone.Transport.stop()\n}\n\ncheckForActiveSession = () => {\n  try {\n    if (sessionStorage && sessionStorage.getItem(\"drums\")) {\n      this.setState({\n        drums: JSON.parse(sessionStorage.getItem(\"drums\")),\n        synth: JSON.parse(sessionStorage.getItem(\"synth\")),\n        bpm: sessionStorage.getItem(\"bpm\"),\n        synthWaveForm: sessionStorage.getItem(\"waveform\"),\n        loadedSongTitle: sessionStorage.getItem(\"loadedSongTitle\"),\n        loadedSongComposer: sessionStorage.getItem(\"loadedSongComposer\"),\n      }, () => this.handleBpmChange(this.state.bpm))\n    }\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nstartPlaying = () => {\n  console.log(\"PLAYING\")\n  Tone.Transport.start(\"+0.2\")\n}\n\nstopPlaying = () => {\n  console.log(\"STOPPED\")\n  Tone.Transport.stop()\n}\n\nrewindPlaying = () => {\n  console.log(\"Rewind\")\n  this.setState({ resetTransport: true, activeBar: 0 })\n}\n\nhandleDrumClick = (drumIndex, barIndex) => {\n  const newDrumMatrix = this.state.drums\n  newDrumMatrix[drumIndex][barIndex] = !this.state.drums[drumIndex][barIndex]\n  this.setState({\n    drums: newDrumMatrix\n  }, console.table(this.state.drums))\n}\n\nhandleNoteClick = (synthKeyIndex, barIndex) => {\n  const newSynthMatrix = this.state.synth\n  newSynthMatrix[synthKeyIndex][barIndex] = !this.state.synth[synthKeyIndex][barIndex]\n  this.setState({\n    synth: newSynthMatrix\n  }, console.table(this.state.synth))\n}\n\nhandleBpmChange = newBpm => {\n  this.setState({\n    bpm: newBpm\n  }, () => {\n    console.log(\"STATE bpm: \", this.state.bpm)\n    console.log(\"TRANSPORT bpm: \", Tone.Transport.bpm.value)\n    Tone.Transport.bpm.rampTo(this.state.bpm, 0.2)\n  })\n}\n\nchangeWaveForm = newWaveForm => {\n  console.log(newWaveForm)\n  this.setState({\n    synthWaveForm: newWaveForm\n  }, () => console.log(\"STATE waveform: \", this.state.synthWaveForm))\n}\n\nclearMatrix = () => {\n  console.log(\"Cleared sequenser...\")\n  this.setState({\n    synth: EMPTY_SYNTH_MATRIX(),\n    drums: EMPTY_DRUM_MATRIX(),\n    bpm: DEFAULT_BPM,\n    synthWaveForm: DEFAULT_WAVEFORM,\n    loadedSongTitle: DEFAULT_SONG_TITLE,\n    loadedSongComposer: DEFAULT_COMPOSER\n  }, () => console.log(\"STATE RIGHT AFTER RESET: \", this.state))\n  sessionStorage.removeItem(\"drums\")\n  sessionStorage.removeItem(\"synth\")\n  sessionStorage.removeItem(\"bpm\")\n  sessionStorage.removeItem(\"waveform\")\n  sessionStorage.removeItem(\"loadedSongTitle\")\n  sessionStorage.removeItem(\"loadedSongComposer\")\n}\n\nsoundGenerator = () => {\n  // ---------------------- //\n  //   MASTER & FX SECTION  //\n  // ---------------------- //\n\n  Tone.Transport.bpm.value = this.state.bpm\n  Tone.context.latencyHint = \"fastest\"\n\n  // SIGNAL CHAIN: Source(Sequenser) -> Gain -> Reverb -> Master(Speakers)\n  const freeverb = new Tone.Freeverb(0.05, 15000).toMaster()\n  const gain = new Tone.Gain(0.6)\n  gain.connect(freeverb)\n\n  // --------------------//\n  //    DRUMS SECTION    //\n  // --------------------//\n\n  const drums = [\n    new Tone.MembraneSynth(),\n    new Tone.NoiseSynth(SNARE_DRUM_SETTINGS),\n    new Tone.MetalSynth(HIHAT_DRUM_SETTINGS)\n  ]\n  drums.forEach(drum => drum.connect(gain))\n\n  // --------------------//\n  //    SYNTH SECTION    //\n  // --------------------//\n\n  const synths = []\n  this.state.synth.forEach((synth, i) => (\n    synths.push(new Tone.Synth())\n  ))\n  synths.forEach(synth => synth.connect(gain))\n\n  // -------------------- //\n  //  TRANSPORT SECTION   //\n  // -------------------- //\n\n  let transportIndex = 0\n\n  // RUN LOOP\n  Tone.Transport.scheduleRepeat(time => {\n    if (this.state.resetTransport) {\n      transportIndex = 0\n      this.setState({ resetTransport: false, activeBar: 0 })\n    }\n    const step = transportIndex % 16\n    this.setState({ activeBar: step })\n\n    // UPDATE SYNTH WAVEFORM IF USER SWITCHED SETTING\n    if (synths[0].oscillator.type !== this.state.synthWaveForm) {\n      const setNewWaveFrom = synths.map(synth => {\n        return new Promise(resolve => {\n          synth.oscillator.type = this.state.synthWaveForm\n          resolve()\n        })\n      })\n      Promise.all(setNewWaveFrom).then(\n        console.log(\"All synths updated to new waveform...\")\n      )\n    }\n\n    // GENERATE USER'S SYNTH NOTES\n    synths.forEach((synth, synthIndex) => {\n      if (this.state.synth[synthIndex][step]) {\n        synth.triggerAttackRelease(SYNTH_NOTES[synthIndex], \"8n\", time)\n      }\n    })\n\n    // GENERATE USER'S DRUM BEATS\n    drums.forEach((drum, drumIndex) => {\n      if (this.state.drums[drumIndex][step]) {\n        switch (drumIndex) {\n          default:\n            drums[drumIndex].triggerAttackRelease(\"C1\", \"8n\", time); break\n          case 1:\n            drums[drumIndex].triggerAttackRelease(\"16n\"); break\n          case 2:\n            drums[drumIndex].triggerAttackRelease(\"16n\", time, 0.6); break\n        }\n      }\n    })\n\n    transportIndex++\n  }, \"8n\")\n}\n\nrender() {\n\n  const { synth, drums, activeBar, bpm, synthWaveForm, loadedSongTitle, loadedSongComposer } = this.state\n  return (\n\n    <div className=\"musicMaker-wrapper\">\n      <section className=\"sequenser-container\">\n        <h1 className=\"composerPage-headline\">COMPOSE</h1>\n        {this.state.loadedSongTitle !== \"untitled\" ?\n          <h3 className=\"section-heading\">\n            {\"SONG:\"} <span className=\"highlighted\">{`\"${loadedSongTitle.toUpperCase()}\" `}</span>\n            {\" \"}\n            {\"BY:\"} <span className=\"highlighted\">{loadedSongComposer.toUpperCase()}</span>\n        </h3> : <h3 className=\"section-heading\"><span className=\"highlighted\">NEW SONG</span></h3>\n\n        }\n\n        <SynthModule\n          synth={synth}\n          activeBar={activeBar}\n          handleNoteClick={(synthKeyIndex, barIndex) => this.handleNoteClick(synthKeyIndex, barIndex)} />\n\n        <DrumsModule\n          drums={drums}\n          activeBar={activeBar}\n          handleDrumClick={(drumIndex, barIndex) => this.handleDrumClick(drumIndex, barIndex)}\n          />\n\n        <div className=\"transportControls\">\n          <button onClick={this.startPlaying} className=\"transportControl transportControl__button\"><span className=\"transportControl__symbol\">&#9654;</span><br />PLAY</button>\n          <button onClick={this.stopPlaying} className=\"transportControl transportControl__button\"><span className=\"transportControl__symbol\">&#9632;</span><br />STOP</button>\n          <button onClick={this.rewindPlaying} className=\"transportControl transportControl__button\"><span className=\"transportControl__symbol\">&#9664;&#9664;</span><br />REWIND</button>\n          <button onClick={this.clearMatrix} className=\"transportControl transportControl__button\"><span className=\"transportControl__symbol\">&#9167;</span><br />CLEAR</button>\n        </div>\n      </section>\n      <Settings\n        bpm={bpm}\n        changeBpm={newBpm => this.handleBpmChange(newBpm)}\n        synthWaveForm={synthWaveForm}\n        changeWaveForm={newWaveForm => this.changeWaveForm(newWaveForm)}\n        loadedSongTitle={loadedSongTitle}\n        loadedSongComposer={loadedSongComposer} />\n    </div>\n  )\n}\n\n}\n\nexport default Sequenser\n","import React from \"react\"\nimport \"./saveLoad.scss\"\nimport { WYT_SERVER_URL } from \"../../constants\"\nclass SaveLoad extends React.Component {\n\nstate = {\n  songTitle: \"\",\n  composer: \"\",\n  songList: [],\n  songToLoad: \"\",\n  loadedSong: \"\"\n}\n\ncomponentDidMount() {\n  // Load songlist from database to display in song field\n  this.loadSongList()\n}\n\nloadSongList() {\n  console.log(\"Loading saved songlist...\")\n  console.log(`TEST: ${WYT_SERVER_URL}/songs/`)\n\n  fetch(`${WYT_SERVER_URL}/songs/`)\n    .then(response => response.json())\n    .then(songList => {\n      this.setState({\n        songList\n      }, () => console.log(this.state.songList))\n    })\n}\n\nhandleFormChange = e => {\n  console.log(e.target, e.target.value)\n  if (e.target.type === \"text\") {\n    this.setState({\n      [e.target.name]: e.target.value.toUpperCase()\n    })\n  } else {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n}\n\nclearFields= () => {\n  this.setState({\n    songTitle: \"\",\n    composer: \"\"\n  })\n}\n\nsubmitSave = e => {\n  e.preventDefault()\n  const { songTitle, composer } = this.state\n  const newSong = {\n    songId: Date.now(),\n    createdDate: new Date(),\n    songTitle,\n    composer,\n    drums: sessionStorage.getItem(\"drums\"),\n    synth: sessionStorage.getItem(\"synth\"),\n    bpm: sessionStorage.getItem(\"bpm\"),\n    waveform: sessionStorage.getItem(\"waveform\")\n  }\n  console.log(newSong)\n\n  console.log(`TEST: ${WYT_SERVER_URL}/songs/`)\n  fetch(`${WYT_SERVER_URL}/songs/`, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    method: \"Post\",\n    body: JSON.stringify(newSong)\n  })\n    .then(data => {\n      console.log(\"Request success: \", data)\n      sessionStorage.setItem(\"loadedSongTitle\", songTitle)\n      sessionStorage.setItem(\"loadedSongComposer\", composer)\n      this.loadSongList()\n      this.props.loadNewSong(true)\n      this.clearFields()\n    })\n    .catch(error => {\n      console.log(\"Request failure: \", error)\n      alert(error)\n    })\n}\n\nsubmitLoad = e => {\n  e.preventDefault()\n  const { songToLoad } = this.state\n  if (!songToLoad) {\n    console.log(\"Choose a song to load...\")\n  } else {\n    console.log(`Loading song with id: ${songToLoad}...`)\n\n    // const watchYourToneServer = process.env.WYT_SERVER_URL || \"http://localhost:8080\"\n    console.log(`TEST: ${WYT_SERVER_URL}/songs/${songToLoad}`)\n\n    fetch(`${WYT_SERVER_URL}/songs/${songToLoad}`)\n      .then(response => response.json())\n      .then(loadedSong => {\n        this.setState({\n          loadedSong\n        }, () => {\n          this.loadSongToStorage()\n          console.log(this.state)\n        })\n      })\n\n    // CREATE MESSAGE (Are you sure, do you wnat to save song first?)\n  }\n}\n\nloadSongToStorage = () => {\n  const { loadedSong } = this.state\n  console.log(\"NEWLY LOADED SONG: \", loadedSong)\n  console.table(JSON.parse(loadedSong.drums))\n  console.table(JSON.parse(loadedSong.synth))\n  console.log(loadedSong.bpm)\n  console.log(loadedSong.waveform)\n  console.log(loadedSong.songTitle)\n  console.log(loadedSong.composer)\n\n  sessionStorage.setItem(\"drums\", loadedSong.drums)\n  sessionStorage.setItem(\"synth\", loadedSong.synth)\n  sessionStorage.setItem(\"bpm\", loadedSong.bpm)\n  sessionStorage.setItem(\"waveform\", loadedSong.waveform)\n  sessionStorage.setItem(\"loadedSongTitle\", loadedSong.songTitle)\n  sessionStorage.setItem(\"loadedSongComposer\", loadedSong.composer)\n\n  this.props.loadNewSong(true)\n}\n\nrender() {\n  const { songTitle, composer, songList } = this.state\n  return (\n    <div className=\"page-wrapper page-wrapper--saveLoad\">\n      <div className=\"saveForm-container\">\n        <h1 className=\"composerPage-headline composerPage-headline--saveLoad\">SAVE:</h1>\n        <form id=\"postingForm\" className=\"postingForm\" onSubmit={this.submitSave}>\n          <input className=\"formInput formInput__field\" value={songTitle} type=\"text\" placeholder=\"SONG TITLE\" name=\"songTitle\" required onChange={this.handleFormChange} />\n          <input className=\"formInput formInput__field\" value={composer} type=\"text\" placeholder=\"COMPOSER NAME\" name=\"composer\" required onChange={this.handleFormChange} />\n          <input className=\"submitButton formInput__button formInput__button--save\" type=\"submit\" value=\"SAVE\" />\n        </form>\n      </div>\n\n      <div className=\"loadForm-container\">\n        <h1 className=\"composerPage-headline composerPage-headline--saveLoad\">LOAD:</h1>\n        <form id=\"loadingForm\" className=\"loadingForm\" onSubmit={this.submitLoad}>\n          <select\n            name=\"songToLoad\"\n            className=\"formInput formInput formInput__select\"\n            onChange={this.handleFormChange}\n            size=\"5\">\n            {songList\n              .sort((a,b)=>(a.songId<b.songId) ? 1 : ((b.songId<a.songId) ? -1 : 0))\n              .map((song, index) => (\n              <option\n                key={index}\n                value={song.songId}\n                >{`${song.songTitle.toUpperCase()} (${song.composer.toUpperCase()})`}</option>\n            ))}\n          </select>\n          <input className=\"submitButton formInput__button formInput__button--load\" type=\"submit\" value=\"LOAD\" />\n        </form>– \n      </div>\n\n    </div>\n  )\n}\n\n}\n\nexport default SaveLoad\n","import React from \"react\"\nimport Header from \"../../header/header\"\nimport Sequenser from \"../../amodules/sequenser/sequenser\"\nimport SaveLoad from \"../../amodules/saveLoad/saveLoad\"\n\nimport \"./composerPage.scss\"\n\nclass ComposerPage extends React.Component {\n\nstate = {\n  newSongLoaded: false\n}\n\nloadNewSong = newSongLoaded => {\n  console.log(\"New song just loaded to SessionStorage...\")\n  this.setState({ newSongLoaded })\n}\n\nresetSongLoader = () => {\n  console.log(\"New song loaded to sequenser, loader reset...\")\n  this.setState({ newSongLoaded: false })\n}\n\nrender() {\n  return (\n    <div className=\"page-wrapper page-wrapper--composerPage\">\n      <Sequenser\n        newSongLoaded={this.state.newSongLoaded}\n        resetSongLoader={this.resetSongLoader} />\n      <SaveLoad loadNewSong={newSongLoaded => this.loadNewSong(newSongLoaded)} />\n    </div>\n  )\n}\n\n}\n\nexport default ComposerPage\n","import React from \"react\"\nimport \"./404.scss\"\n\nclass NotFound extends React.Component {\n\n  render() {\n    return (\n      <div className=\"page-wrapper page-wrapper--404\">\n        <h1>404</h1>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React from \"react\"\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\n\nimport Header from \"./header/header\"\nimport ComposerPage from \"./pages/composerPage/composerPage\"\nimport NotFound from \"./pages/404/404\"\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={ComposerPage} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/app\"\nimport \"./index.scss\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}